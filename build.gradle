plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id "org.ysb33r.doxygen" version "1.0.2"
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

base{
	archivesName = project.archives_name
	version = project.mod_version
	group = project.maven_group
}

doxygen {
	source 'src/main/java'
	template 'DoxyfileTemplate'
}


repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven { url 'https://maven.wispforest.io' }
	maven {
		name = "QuiltMC"
		url = "https://maven.quiltmc.org/repository/release/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	//Arrp to generate resources during runtime
	modImplementation("maven.modrinth:arrp:0.8.0")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//add owo config as config loader
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	include "io.wispforest:owo-sentinel:${project.owo_version}"
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")

	// add sakuralib for date generation
	modImplementation include("maven.modrinth:sakura-lib:${sakuralib_version}")

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	modCompileOnly modLocalRuntime("dev.emi:trinkets:${trinkets_version}")

	modCompileOnly modLocalRuntime("maven.modrinth:libz:${libz_version}")
	modCompileOnly modLocalRuntime("maven.modrinth:levelz:${levelz_version}")

	//add mods to local runtime for testing
	modLocalRuntime("maven.modrinth:mixin-conflict-helper:${mixin_conflict_helper_version}")
	modLocalRuntime("maven.modrinth:mixintrace:${mixin_trace_version}")
	modLocalRuntime("maven.modrinth:emi:${emi_version}"){transitive = true}
	modLocalRuntime("maven.modrinth:emi-loot:${emi_loot_version}"){transitive = true}
	modLocalRuntime("maven.modrinth:emitrades:${emi_trades_version}"){transitive = true}
	modLocalRuntime("org.quiltmc.parsers:json:0.2.1")
	modLocalRuntime("maven.modrinth:modmenu:${modmenu_version}")
}

processResources {
	inputs.property "mod_version", project.version
	inputs.property "sakuralib_version", sakuralib_version

	filesMatching("fabric.mod.json") {
		expand ("mod_version": project.version, "sakuralib_version": sakuralib_version)
	}
}

loom {
	accessWidenerPath = file("src/main/resources/evenbetterarcheology.accesswidener")
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
	modularity.inferModulePath = true
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
